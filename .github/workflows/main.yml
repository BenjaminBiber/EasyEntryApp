name: Build & Push Release Image to Docker-Hub

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-docker-Image-from-Release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Determine Docker Tag
      id: set_tag
      run: |
        if [ "${{ github.event.release.prerelease }}" = "true" ]; then
          echo "tag=prerelease" >> $GITHUB_ENV
        else
          echo "tag=latest" >> $GITHUB_ENV
        fi

    - name: Build Docker Image
      run: |
            docker build . \
            --file Dockerfile \
            --tag benjaminbiber/easyentryapp:latest

    - name: Push the Docker image to Docker Hub
      run: docker push benjaminbiber/easyentryapp:latest
      
  build_manifest:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Determine Docker Tag
      id: set_tag
      run: |
        if [ "${{ github.event.release.prerelease }}" = "true" ]; then
          echo "tag=prerelease" >> $GITHUB_ENV
        else
          echo "tag=latest" >> $GITHUB_ENV
        fi

    - name: Check for Dockerfile-Manifest
      id: check_dockerfile_manifest
      run: |
        if [ -f Dockerfile_Api ]; then
          echo "dockerfilex_exists=true" >> $GITHUB_ENV
        else
          echo "dockerfilex_exists=false" >> $GITHUB_ENV
        fi

    - name: Build and Push Dockerfile_X Image
      if: env.dockerfilex_exists == 'true'
      run: |
       docker build . \
            --file Dockerfile_Api \
            --tag benjaminbiber/easyentryapi:latest

        docker push benjaminbiber/easyentryapi:latest
